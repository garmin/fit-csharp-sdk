#region Copyright
/////////////////////////////////////////////////////////////////////////////////////////////
// Copyright 2024 Garmin International, Inc.
// Licensed under the Flexible and Interoperable Data Transfer (FIT) Protocol License; you
// may not use this file except in compliance with the Flexible and Interoperable Data
// Transfer (FIT) Protocol License.
/////////////////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 21.158.0Release
// Tag = production/release/21.158.0-0-gc9428aa
/////////////////////////////////////////////////////////////////////////////////////////////

#endregion

using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Text;
using System.IO;
using System.Linq;

namespace Dynastream.Fit
{
	/// <summary>
	/// Implements the CoursePoint profile message.
	/// </summary>
	public class CoursePointMesg : Mesg
	{
		#region Fields
		#endregion

		/// <summary>
		/// Field Numbers for <see cref="CoursePointMesg"/>
		/// </summary>
		public sealed class FieldDefNum
		{
			public const byte MessageIndex = 254;
			public const byte Timestamp = 1;
			public const byte PositionLat = 2;
			public const byte PositionLong = 3;
			public const byte Distance = 4;
			public const byte Type = 5;
			public const byte Name = 6;
			public const byte Favorite = 8;
			public const byte Invalid = Fit.FieldNumInvalid;
		}

		#region Constructors
		public CoursePointMesg() : base(Profile.GetMesg(MesgNum.CoursePoint))
		{
		}

		public CoursePointMesg(Mesg mesg) : base(mesg)
		{
		}
		#endregion // Constructors

		#region Methods
		///<summary>
		/// Retrieves the MessageIndex field</summary>
		/// <returns>Returns nullable ushort representing the MessageIndex field</returns>
		public ushort? MessageIndex
		{
			get
			{
				Object val = GetFieldValue(254, 0, Fit.SubfieldIndexMainField);
				if (val == null)
				{
					return null;
				}

				return (Convert.ToUInt16(val));

			}
			set
			{
				SetFieldValue(254, 0, value, Fit.SubfieldIndexMainField);
			}
		}

		///<summary>
		/// Retrieves the Timestamp field</summary>
		/// <returns>Returns DateTime representing the Timestamp field</returns>
		public DateTime Timestamp
		{
			get
			{
				Object val = GetFieldValue(1, 0, Fit.SubfieldIndexMainField);
				if (val == null)
				{
					return null;
				}

				return TimestampToDateTime(Convert.ToUInt32(val));

			}
			set
			{
				SetFieldValue(1, 0, value.GetTimeStamp(), Fit.SubfieldIndexMainField);
			}
		}

		///<summary>
		/// Retrieves the PositionLat field
		/// Units: semicircles</summary>
		/// <returns>Returns nullable int representing the PositionLat field</returns>
		public int? PositionLat
		{
			get
			{
				Object val = GetFieldValue(2, 0, Fit.SubfieldIndexMainField);
				if (val == null)
				{
					return null;
				}

				return (Convert.ToInt32(val));

			}
			set
			{
				SetFieldValue(2, 0, value, Fit.SubfieldIndexMainField);
			}
		}

		///<summary>
		/// Retrieves the PositionLong field
		/// Units: semicircles</summary>
		/// <returns>Returns nullable int representing the PositionLong field</returns>
		public int? PositionLong
		{
			get
			{
				Object val = GetFieldValue(3, 0, Fit.SubfieldIndexMainField);
				if (val == null)
				{
					return null;
				}

				return (Convert.ToInt32(val));

			}
			set
			{
				SetFieldValue(3, 0, value, Fit.SubfieldIndexMainField);
			}
		}

		///<summary>
		/// Retrieves the Distance field
		/// Units: m</summary>
		/// <returns>Returns nullable float representing the Distance field</returns>
		public float? Distance
		{
			get
			{
				Object val = GetFieldValue(4, 0, Fit.SubfieldIndexMainField);
				if (val == null)
				{
					return null;
				}

				return (Convert.ToSingle(val));

			}
			set
			{
				SetFieldValue(4, 0, value, Fit.SubfieldIndexMainField);
			}
		}

		///<summary>
		/// Retrieves the Type field</summary>
		/// <returns>Returns nullable CoursePoint enum representing the Type field</returns>
		public CoursePoint? Type
		{
			get
			{
				object obj = GetFieldValue(5, 0, Fit.SubfieldIndexMainField);
				CoursePoint? value = obj == null ? (CoursePoint?)null : (CoursePoint)obj;
				return value;
			}
			set
			{
				SetFieldValue(5, 0, value, Fit.SubfieldIndexMainField);
			}
		}

		///<summary>
		/// Retrieves the Name field</summary>
		/// <returns>Returns byte[] representing the Name field</returns>
		public byte[] Name
		{
			get
			{
				byte[] data = (byte[])GetFieldValue(6, 0, Fit.SubfieldIndexMainField);
				return data.Take(data.Length - 1).ToArray();
			}
			set
			{
				SetFieldValue(6, 0, value, Fit.SubfieldIndexMainField);
			}
		}

		///<summary>
		/// Retrieves the Name field</summary>
		/// <returns>Returns String representing the Name field</returns>
		public String GetNameAsString()
		{
			byte[] data = (byte[])GetFieldValue(6, 0, Fit.SubfieldIndexMainField);
			return data != null ? Encoding.UTF8.GetString(data, 0, data.Length - 1) : null;
		}

		///<summary>
		/// Set Name field</summary>
		/// <param name="name_"> field value to be set</param>
		public void SetName(String name_)
		{
			byte[] data = Encoding.UTF8.GetBytes(name_);
			byte[] zdata = new byte[data.Length + 1];
			data.CopyTo(zdata, 0);
			SetFieldValue(6, 0, zdata, Fit.SubfieldIndexMainField);
		}

		///<summary>
		/// Retrieves the Favorite field</summary>
		/// <returns>Returns nullable Bool enum representing the Favorite field</returns>
		public Bool? Favorite
		{
			get
			{
				object obj = GetFieldValue(8, 0, Fit.SubfieldIndexMainField);
				Bool? value = obj == null ? (Bool?)null : (Bool)obj;
				return value;
			}
			set
			{
				SetFieldValue(8, 0, value, Fit.SubfieldIndexMainField);
			}
		}

		#endregion // Methods
	} // Class
} // namespace
